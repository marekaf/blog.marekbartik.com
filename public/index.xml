<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>marekbartik.com | tech blog</title>
    <link>http://blog.marekbartik.com/</link>
    <description>Recent content on marekbartik.com | tech blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Marek Bartík - All rights reserved</copyright>
    <lastBuildDate>Thu, 26 Sep 2019 09:32:41 +0000</lastBuildDate>
    
	<atom:link href="http://blog.marekbartik.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Container Registry lifecycle policy for images retention</title>
      <link>http://blog.marekbartik.com/posts/2019-09-26_google-container-registry-lifecycle-policy-for-images-retention/</link>
      <pubDate>Thu, 26 Sep 2019 09:32:41 +0000</pubDate>
      
      <guid>http://blog.marekbartik.com/posts/2019-09-26_google-container-registry-lifecycle-policy-for-images-retention/</guid>
      <description>Is your Google Container Registry filling up, taking up storage and becoming expensive? How to handle images retention as a service?
Amazon’s Elastic Container Registry has a feature called Lifecycle Policies to handle images retention.</description>
    </item>
    
    <item>
      <title>HorizontalPodAutoscaler with external metrics from PubSub</title>
      <link>http://blog.marekbartik.com/posts/2019-04-05_google-kubernetes-enginehorizontalpodautoscaler-with-external-metrics-from-pubsub/</link>
      <pubDate>Fri, 05 Apr 2019 12:31:58 +0000</pubDate>
      
      <guid>http://blog.marekbartik.com/posts/2019-04-05_google-kubernetes-enginehorizontalpodautoscaler-with-external-metrics-from-pubsub/</guid>
      <description>There are certain use cases where scaling horizontally based on cpu usage does not really work well. Let’s say you have a consumer worker pool running on Google Kubernetes Engine.</description>
    </item>
    
    <item>
      <title>Stackdriver Logging - json log transformations using Cloud Functions</title>
      <link>http://blog.marekbartik.com/posts/2019-01-26_gcp-stackdriver-logging-export-to-bucket-and-extract-textpayload-from-json-with-cloud-functions/</link>
      <pubDate>Sat, 26 Jan 2019 16:20:44 +0000</pubDate>
      
      <guid>http://blog.marekbartik.com/posts/2019-01-26_gcp-stackdriver-logging-export-to-bucket-and-extract-textpayload-from-json-with-cloud-functions/</guid>
      <description>Stackdriver Logging can get expensive. Sometimes you don’t need to query/store all your application logs in Stackdriver, especially dev logs. Or you simply don’t like Stackdriver (wink wink).</description>
    </item>
    
    <item>
      <title>Kubernetes in production — PodDisruptionBudget</title>
      <link>http://blog.marekbartik.com/posts/2018-06-29_kubernetes-in-production-poddisruptionbudget/</link>
      <pubDate>Fri, 29 Jun 2018 08:50:55 +0000</pubDate>
      
      <guid>http://blog.marekbartik.com/posts/2018-06-29_kubernetes-in-production-poddisruptionbudget/</guid>
      <description>How to manage disruptions in Kubernetes? Setting a proper RollingUpdate strategy specs solves only one type of disruption. What about other disruptions like deleting deployments on accident, network partitions, kernel panics, hardware failures, pod evictions?</description>
    </item>
    
    <item>
      <title>Autoscale nginx and php-fpm independently on Kubernetes</title>
      <link>http://blog.marekbartik.com/posts/2018-03-24_autoscale-nginx-and-phpfpm-independently-on-google-kubernetes-engine/</link>
      <pubDate>Sat, 24 Mar 2018 15:43:47 +0000</pubDate>
      
      <guid>http://blog.marekbartik.com/posts/2018-03-24_autoscale-nginx-and-phpfpm-independently-on-google-kubernetes-engine/</guid>
      <description>Let’s say I have a stateless php app that needs to run 24&amp;frasl;7 and automatically scale up to perform well and scale down to be cost-effective.</description>
    </item>
    
    <item>
      <title>Google Kubernetes Engine &#43; Cloud Builder &#43; GitHub for easy and quick CD pipeline</title>
      <link>http://blog.marekbartik.com/posts/2018-02-26_google-kubernetes-engine-google-cloud-builder-github-for-easy-and-quick-cd-pipeline/</link>
      <pubDate>Mon, 26 Feb 2018 09:58:14 +0000</pubDate>
      
      <guid>http://blog.marekbartik.com/posts/2018-02-26_google-kubernetes-engine-google-cloud-builder-github-for-easy-and-quick-cd-pipeline/</guid>
      <description>I love Google Cloud Platform. I love Google Kubernetes Engine. And I love GitHub as well. But I need a quick CD pipeline for an easy automated app deployment.</description>
    </item>
    
  </channel>
</rss>